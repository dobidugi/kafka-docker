version: '3.8'  # 필요에 따라 버전 맞춰서 사용

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3.9
    container_name: kafka
    ports:
      # 외부에서 접근할 포트 매핑
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # =================================================
      # 내부/외부 리스너 분리
      # =================================================
      - KAFKA_CFG_LISTENERS=PLAINTEXT_INTERNAL://:9093,PLAINTEXT_EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT_INTERNAL://kafka:9093,PLAINTEXT_EXTERNAL://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT_INTERNAL:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT
      
      # 브로커 간 통신(inter broker)은 내부 리스너 사용
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT_INTERNAL
      
      # Zookeeper 사용
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181

    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8079:8080"
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_NAME=peters_kafka

      # Kafka UI는 같은 docker-compose 네트워크 안에 있으므로 
      # 내부 리스너를 사용(kafka:9093)해서 접속
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
      
    depends_on:
      - kafka

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
